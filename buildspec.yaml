version: 0.2
env:
  variables:
    EKS_CLUSTERNAME: my-eks-cluster
    EKS_ROLE_ARN: arn:aws:iam::008971679675:role/eksrolepolicy
    REPOSITORY_URL: 008971679675.dkr.ecr.ap-south-1.amazonaws.com/my-eks-repo
phases:
  install:
    commands:
      - echo "Install Phase - if you need additional package, add it in this stage"
  pre_build:
    commands:
      - TAG="$(date +%Y-%m-%d.%H.%M.%S).$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - echo "Update Image tag in kubernetes manifest"
      - sed -i 's@CONTAINER_IMAGE@'"$REPOSITORY_URL:$TAG"'@' manifests/deployment.yaml
      - echo "Checking AWS CLI Version..."
      - aws --version
      - echo "Login in to Amazon ECR Registry"
      - $(aws ecr get-login --no-include-email)
      - export KUBECONFIG=$HOME/.kube/config
  build:
    commands:
      - echo "Docker build started on `date`"
      - echo "Building the Docker image..."
      - docker build --tag $REPOSITORY_URL:$TAG .
  post_build:
    commands:
      - echo "Docker build completed on `date`"
      - echo "Pushing the Docker image to ECR Repository"
      - docker push $REPOSITORY_URL:$TAG
      - echo "Docker Push to ECR Repository Completed - $REPOSITORY_URL:$TAG"
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"
      - CREDENTIALS=$(aws sts assume-role --role-arn $EKS_ROLE_ARN --role-session-name eks-codebuild --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - echo "Update Kube Config configuration"
      - aws eks update-kubeconfig --name $EKS_CLUSTERNAME
      - echo "Apply changes to kube manifests"
      - kubectl apply -f manifests/
      - echo "All done!!!! Kubernetes changes applied"
      - printf '[{"name":"deployment.yaml","imageUri":"%s"}]' $REPOSITORY_URL:$TAG > build.json
artifacts:
  files:
    - build.json
    - manifests/*
